// Generated by Bazarbozorg TypeList Generator
package com.bazarbozorg.model.types;

import java.lang.Override;
import java.lang.String;
import java.util.UUID;

/**
 * TypeList enum generated from Excel file for Gender
 * Generated on: 2025-03-15T17:53:25.4898224
 * @see com.bazarbozorg.model.types.TypeList
 */
public enum GenderTypeList implements TypeList<GenderTypeList> {
  MALE("MALE", UUID.fromString("2f3ed6a0-6e59-4693-9efe-7923e1f0b105")),

  FEMALE("FEMALE", UUID.fromString("9c7d3f2b-8a6c-4e5d-b1f3-7e6a0d5c8b2a")),

  NONBINARY("NONBINARY", UUID.fromString("d8e4f5c6-7b2a-1d9e-8f7c-6b5a4d3c2b1a")),

  OTHER("OTHER", UUID.fromString("a1b2c3d4-e5f6-4a5b-9c7d-1e2f3a4b5c6d")),

  NOT_SPECIFIED("NOT_SPECIFIED", UUID.fromString("5f6e7d8c-9b0a-1c2d-3e4f-5a6b7c8d9e0f"));

  static {
    TypeList.register(GenderTypeList.class);
  }

  private final String code;

  private final UUID id;

  private GenderTypeList(String code, UUID id) {
    this.code = code;
    this.id = id;
  }

  /**
   * Find enum constant by UUID.
   * @param id the UUID to search for
   * @return the matching enum constant or null if not found
   */
  public static GenderTypeList fromId(UUID id) {
    return TypeList.fromId(GenderTypeList.class, id);
  }

  /**
   * Find enum constant by code.
   * @param code the code to search for
   * @return the matching enum constant or null if not found
   */
  public static GenderTypeList fromCode(String code) {
    for (GenderTypeList value : values()) {
      if (value.getCode().equals(code)) {
        return value;
      }
    }
    return null;
  }

  @Override
  public UUID getId() {
    return id;
  }

  @Override
  public String getCode() {
    return code;
  }

  @Override
  public String toString() {
    return code;
  }
}
